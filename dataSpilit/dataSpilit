# I hae 12 different classes (folder) in training data. it takes 2 of them in to valid folder. 
# dataset name is "plant-seedlings-classification" in kaggle

import os
import random
import shutil

source = 'folder_path_1'
dest = 'dest_folder_path'
files = os.listdir(source)
no_of_files = len(files) // 5

for file_name in random.sample(files, no_of_files):
    shutil.move(os.path.join(source, file_name), dest)
    
    
 ############################################## the code above has been changed like below, 
 # all folders is copied in val directory, however they are empty. we could also make those folders by mkdir in "val" folder
 
 className = ['Black-grass', 'Charlock', 'Cleavers', 'Common Chickweed', 'Common wheat', 'Fat Hen'
                 , 'Loose Silky-bent', 'Maize', 'Scentless Mayweed','Shepherds Purse', 'Small-flowered Cranesbill', 'Sugar beet']

train_dirr = '/Users/mahrokh/Desktop/plant-seedlings-classification/train/'  
val_dirr = '/Users/mahrokh/Desktop/plant-seedlings-classification/val/'


for i in range(len(className)):
    source = f'{train_dirr}{className[i]}'
    dest = f'{val_dirr}{className[i]}'
    
    files = os.listdir(source)
    no_of_files = len(files) // 5
    
    for file_name in random.sample(files, no_of_files):
        shutil.move(os.path.join(source, file_name), dest)
    
    
    
 #################################################### a way to create exate same subfolders that are in train in valid folder
 # it makes "valid folder", then it create [s1,....s40] in valid fldder. 
 # the valid sub-folders are empty yet. 
 
 # list of the name of subfolders in train
 className = ['s34','s33','s5','s2','s32','s35','s3','s4','s26','s19','s21','s17','s28',
             's10','s11','s16','s29','s20','s27','s18','s8','s1','s6','s39','s30','s37',
             's7','s9','s36','s31','s38','s22','s25','s13','s14','s40','s15','s12','s24',
             's23']

DATA_DIR = '/Users/mahrokh/Desktop/faceAT'
train_dir = f'{DATA_DIR}/train'
valid_dir = f'{DATA_DIR}/valid'

# creat valid folder next to train folder
os.mkdir(valid_dir)

# create exact subfolders in valid folder
for i in range(len(className)):
    os.mkdir(f'{DATA_DIR}/valid/{className[i]}')
    
